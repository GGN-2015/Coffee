VAR buffer[129], charCnt


FUNC gets()
    VAR ch
    ch := GETCHAR()
    charCnt := 0
    WHILE 1 LOOP
        IF ch = 10 OR ch = 13 THEN
            buffer[charCnt] := 0
            RETURN OFFSET(buffer)
        ELSE
            IF ch <> 8 THEN
                IF charCnt < 128 THEN
                    buffer[charCnt] := ch
                    charCnt := charCnt + 1
                ELSE
                    PUTCHAR(8)
                    PUTCHAR(32)
                    PUTCHAR(8)
                ENDIF
            ELSE
                IF charCnt > 0 THEN
                    charCnt := charCnt - 1
                    PUTCHAR(32)
                    PUTCHAR(8)
                ENDIF
            ENDIF
        ENDIF
        ch := GETCHAR()
    ENDWHILE
ENDFUNC


FUNC print(pArr)
    VAR i
    i := 0
    WHILE VARAT(pArr + 2 * i) <> 0 LOOP
        PUTCHAR(VARAT(pArr + 2 * i))
        i := i + 1
    ENDWHILE
ENDFUNC


FUNC geti()
    CALL gets()
    VAR i, ans, negflag
    i := 0
    ans := 0
    negflag := 0
    WHILE '0' > buffer[i] OR buffer[i] > '9' LOOP
        IF buffer[i] = '-' THEN
            negflag := 1
        ENDIF
        i := i + 1
    ENDWHILE
    WHILE '0' <= buffer[i] AND buffer[i] <= '9' LOOP
        ans := ans * 10 + buffer[i] - '0'
        i := i + 1
    ENDWHILE
    IF negflag THEN
        RETURN 0 - ans
    ELSE
        RETURN ans
    ENDIF
ENDFUNC


FUNC printInt(x)
    IF x < 0 THEN
        PUTCHAR('-')
        x := - x
    ENDIF
    VAR stk[10], stktop := 0
    IF x = 0 THEN
        PUTCHAR('0')
    ELSE
        WHILE x <> 0 LOOP
            stk[stktop] := x % 10
            x := x / 10
            stktop := stktop + 1
        ENDWHILE
        WHILE stktop > 0 LOOP
            PUTCHAR(stk[stktop - 1] + '0')
            stktop := stktop - 1
        ENDWHILE
    ENDIF
    PUTCHAR(' ')
ENDFUNC


FUNC exgcd(x, y, pa, pb)
    CALL print(" a = ")
    CALL printInt(x)
    PUTCHAR(',')
    CALL print(" b = ")
    CALL printInt(y)
    PUTCHAR(10)
    IF y = 0 THEN
        VARAT(pa) := 1
        VARAT(pb) := 0
        RETURN x
    ELSE
        VAR a0, b0, gcd
        gcd := exgcd(y, x % y, OFFSET(a0), OFFSET(b0))
        VARAT(pa) := b0
        VARAT(pb) := a0 - b0 * (x / y)
        RETURN gcd
    ENDIF
ENDFUNC


FUNC main()
    VAR x, y, a, b, gcd
    CALL print("Input x:")
    x := geti()
    CALL print("Input y:")
    y := geti()
    gcd := exgcd(x, y, OFFSET(a), OFFSET(b))
    CALL print(" a = ")
    CALL printInt(a)
    PUTCHAR(10)
    CALL print(" b = ")
    CALL printInt(b)
    PUTCHAR(10)
    CALL print(" gcd = ")
    CALL printInt(gcd)
    PUTCHAR(10)
ENDFUNC
