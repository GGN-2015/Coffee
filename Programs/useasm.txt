VAR compact_buffer[129]


FUNC compact(pArr)          ; use this function to load string into compact mode
    ASM("MOV SI, [BP-2]")   ; especially for inner ASM
    ASM("LEA DI, GLOBAL_compact_buffer")
    ASM("INNER_ASM_FLAG_1:")
    ASM("MOV AX, [SI]")
    ASM("MOV BYTE PTR [DI], AL")
    ASM("ADD SI, 2")
    ASM("INC DI")
    ASM("AND AX, AX")
    ASM("JNZ INNER_ASM_FLAG_1")
ENDFUNC


FUNC output_hello(pArr)
    CALL compact(pArr)
    ASM("MOV AH, 09H")
    ASM("LEA DX, GLOBAL_compact_buffer") ; use prefix "GLOBAL_" to call a global var
    ASM("INT 21H")
ENDFUNC


FUNC main()
    VAR pHello
    pHello := "hello inner ASM!$"
    CALL output_hello(pHello)
ENDFUNC
