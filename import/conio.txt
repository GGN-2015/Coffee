VAR BUILTIN_GETS_BUF[129], BUILTIN_GETS_CHARCOUNT


FUNC gets()
    VAR ch
    ch := GETCHAR()
    BUILTIN_GETS_CHARCOUNT := 0
    WHILE 1 LOOP
        IF ch = 10 OR ch = 13 THEN
            BUILTIN_GETS_BUF[BUILTIN_GETS_CHARCOUNT] := 0
            RETURN OFFSET(BUILTIN_GETS_BUF)
        ELSE
            IF ch <> 8 THEN
                IF BUILTIN_GETS_CHARCOUNT < 128 THEN
                    BUILTIN_GETS_BUF[BUILTIN_GETS_CHARCOUNT] := ch
                    BUILTIN_GETS_CHARCOUNT := BUILTIN_GETS_CHARCOUNT + 1
                ELSE
                    PUTCHAR(8)
                    PUTCHAR(32)
                    PUTCHAR(8)
                ENDIF
            ELSE
                IF BUILTIN_GETS_CHARCOUNT > 0 THEN
                    BUILTIN_GETS_CHARCOUNT := BUILTIN_GETS_CHARCOUNT - 1
                    PUTCHAR(32)
                    PUTCHAR(8)
                ENDIF
            ENDIF
        ENDIF
        ch := GETCHAR()
    ENDWHILE
ENDFUNC


FUNC print(pArr)
    VAR i
    i := 0
    WHILE VARAT(pArr + 2 * i) <> 0 LOOP
        PUTCHAR(VARAT(pArr + 2 * i))
        i := i + 1
    ENDWHILE
ENDFUNC


FUNC geti()
    CALL gets()
    VAR i, ans, negflag
    i := 0
    ans := 0
    negflag := 0
    WHILE '0' > BUILTIN_GETS_BUF[i] OR BUILTIN_GETS_BUF[i] > '9' LOOP
        IF BUILTIN_GETS_BUF[i] = '-' THEN
            negflag := 1
        ENDIF
        i := i + 1
    ENDWHILE
    WHILE '0' <= BUILTIN_GETS_BUF[i] AND BUILTIN_GETS_BUF[i] <= '9' LOOP
        ans := ans * 10 + BUILTIN_GETS_BUF[i] - '0'
        i := i + 1
    ENDWHILE
    IF negflag THEN
        RETURN 0 - ans
    ELSE
        RETURN ans
    ENDIF
ENDFUNC


FUNC printInt(x)
    VAR stk[10], stktop
    stktop := 0
    IF x < 0 THEN
        x := - x
        PUTCHAR('-')
    ENDIF
    IF x = 0 THEN
        PUTCHAR('0')
    ELSE
        WHILE x <> 0 LOOP
            stk[stktop] := x % 10
            x := x / 10
            stktop := stktop + 1
        ENDWHILE
        WHILE stktop > 0 LOOP
            PUTCHAR(stk[stktop - 1] + 48)
            stktop := stktop - 1
        ENDWHILE
    ENDIF
    ; PUTCHAR(' ')
ENDFUNC

